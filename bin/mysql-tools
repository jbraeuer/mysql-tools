#! /usr/bin/env ruby1.9.1

$: << File.expand_path(File.dirname(File.realpath(__FILE__)) + '/../lib')
require 'mysql_tools'

include GLI

pre do |global,command,options,args|
  setup_logging(global)

  case command.name
  when :backup
    MysqlTools::Backup.pre(global, options, args)
  else
    true
  end
end

program_desc 'Backup, Restore and Obfuscate Mysql databases.'
version      IO.read(File.expand_path(File.dirname(File.realpath(__FILE__)) + '/../VERSION')).strip

desc "Username for Mysql connection"
arg_name "USER"
default_value "root"
flag [:u, :username]

desc "Password for Mysql connection"
arg_name "PASS"
default_value "secret"
flag [:p, :password]

desc "Mysql host to connect"
arg_name "HOST"
default_value "localhost"
flag [:host]

desc "Verbose mode"
default_value false
switch [:verbose]

desc "Backup a database"
long_desc <<EOS
Dump the seletected database using 'mysqldump'.
EOS
arg_name "database_name"
command :backup do |c|

  c.desc "Output filename"
  c.arg_name "FILENAME"
  c.default_value '#{database_name}-#{timestamp}.sql'
  c.flag [:'output-file']

  c.desc "Output path"
  c.arg_name "PATH"
  c.default_value '.'
  c.flag [:'output-path']

  c.action do |global,command,args|
    MysqlTools::Backup.new(global, command,args).run
  end
end

exit GLI.run(ARGV)
